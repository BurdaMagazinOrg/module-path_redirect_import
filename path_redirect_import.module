<?php
// $Id$
/**
 * @file
 * Author: www.ag-prime.com
 */

/**
* Implementation of hook_init()
*/
function path_redirect_import_init() {
  module_load_include('inc', 'path_redirect', 'path_redirect.admin');
}

/**
 * Implementation of hook_perm().
 */
function path_redirect_import_perm() {
  return array(
    'admin path redirect import',
    );
}

/**
 * Implementation of hook_menu().
 */
function path_redirect_import_menu() {
  $items['admin/build/path-redirect/import'] = array(
    'title' => 'Import',
    'description' => 'Import from CSV file',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('path_redirect_import_form'),
    'access arguments' => array('admin path redirect import'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/*
 *  form for import redirect path
 */
function path_redirect_import_form() {
  $form = array();
  $form['csv'] = array(
    '#type' => 'fieldset',
    '#title' => t('Import from .csv file'),
  );
  $form['csv']['csv_file'] = array(
    '#type' => 'file',
    '#description' => t('File structure: "old url","new_url","redirect_code" (defaults to 301)'),
  );
  $form['submit'] = array('#type' => 'submit', '#value' => t('Import'));
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  return $form;
}
/*
 * validate form function
 */
function path_redirect_import_form_validate($form, &$form_state) {
  if ($file = file_save_upload('csv_file')) {
    $base = file_directory_path();
    $target = "";
    if (!is_dir($base . "/upload")) {
      if (mkdir($base . "/upload"))
        $target = "/upload";
    }
    else $target = "/upload";
    if (!is_dir($base . "/upload/csv")) {
      if (mkdir($base . "/upload/csv"))
        $target = "/upload/csv";
    }
    else $target = "/upload/csv";
    $destination = $base . $target . "/" . $file->filename;
    if (file_copy($file, $destination, FILE_EXISTS_REPLACE)) {
      $form_state['uploaded_file'] = $destination;
    }
    else{
      form_set_error('form', t('File could not be copied to its destination.'));
    }
  }
  else{
    form_set_error('form', t('File upload failed.'));
  }
}
/*
 * Submit form function
 */
function path_redirect_import_form_submit($form, &$form_state) {
  if (!isset($form_state['uploaded_file'])) return;
  if (!$f = fopen($form_state['uploaded_file'], 'r')) {
    form_set_error('form', t("Could not open uploaded file."));
  }
  $line_no = 0;
  $count = 0;
  $output='';
  while ($line = fgetcsv($f, 1024, ",")) {
    $line_no++;
    $error = '';
    if (!is_array($line)) {
      $error .= t('Line %line_no is invalid.', array('%line_no' => $line_no)) . '<br />';
    }
    if ($line[0] == '' || $line[1] == '') {
      $error .= t('Line %line_no contains invalid data.', array('%line_no' => $line_no)) . '<br />';
    }
    if ($line[2] == '') {
      $line[2] = '301';
    }
    $data = array(
      'old_url' => $line[0],
      'new_url' => $line[1],
      'redirect_code' => $line[2],
    );
    if ($error == '') {
      if (!path_redirect_import_save_data($data)) {
        drupal_set_message(t('Inserting the data in the database has failed.'), 'error');
      }
      else{
        $count++;
      }
    }
    else {
      drupal_set_message($error, 'error');
    }
  }
  if ($count > 0) {
    drupal_set_message(t('%count row(s) imported.', array('%count' => $count)), 'message');
  }
}

/*
 * Function for save data from .csv file into the database
 */
function path_redirect_import_save_data($data) {
  $redirect = array();
  $redirect['values']['source'] = $data['old_url'];
  path_redirect_validate_redirect_field(array('#value' => $data['new_url']), $redirect);
  $redirect['values']['type'] = $data['redirect_code'];
  //if the redirect for the URL exists, module overwrite with new value.
  if ($existing = path_redirect_load_by_source($data['new_url'], isset($data['language']) ? $data['language'] : '')) {
    $redirect['values']['rid'] = $existing['rid'];
  }
  return path_redirect_save($redirect['values']);
}
