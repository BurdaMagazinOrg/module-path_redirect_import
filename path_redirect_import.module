<?php

/**
 * @file
 * Page and form to import drupal path redirects
 */
use Drupal\Component\Utility\UrlHelper;
use Drupal\redirect\Entity\Redirect;

/**
 * Function that processes the file
 */
function path_redirect_import_read_file($file, $options = array()) {
  $options += array(
    'delimiter' => ',',
    'no_headers' => TRUE,
    'override' => FALSE,
    'status_code' => '301',
//    'language' => LANGUAGE_NOT_SPECIFIED,
  );

  if (!$f = fopen($file, 'r')) {
    return array('success' => FALSE, 'message' => array(t('Unable to read the file')));
  }
  $line_no = 0;
  $count = 0;
  $messages = array();
  $success = FALSE;

  while ($line = fgetcsv($f, 0, $options['delimiter'])) {
    $line_no++;
    if ($line_no == 1 && !$options['no_headers']) {
      drupal_set_message(t('Skipping the header row.'));
      continue;
    }

    if (!is_array($line)) {
      $messages[] = t('Line @line_no is invalid.', array('@line_no' => $line_no));
      continue;
    }
    if (empty($line[0]) || empty($line[1])) {
      $messages[] = t('Line @line_no contains invalid data.', array('@line_no' => $line_no));
      continue;
    }
    if (empty($line[2])) {
      $line[2] = $options['status_code'];
    }
    else {
      $redirect_options = redirect_status_code_options();
      if (!isset($redirect_options[$line[2]])) {
        $messages[] = t('Line @line_no contains invalid status code', array('@line_no' => $line_no));
        continue;
      }
    }
    /*if (module_exists('locale')) {
      if (empty($line[3])) {
        $line[3] = $options['language'];
      }
      else {
        $language_options = locale_language_list('name');
        if (!isset($language_options[$line[3]])) {
          $messages[] = t('Line @line_no contains invalid language code', array('@line_no' => $line_no));
          continue;
        }
      }
    }*/

    $source_parts = UrlHelper::parse($line[0]);

    /** @var array Redirect $existingRedirect */
    $existingRedirect = redirect_repository()->findMatchingRedirect($source_parts['path'], $source_parts['query']);

    if($existingRedirect) {
      if($options['override']) {
        foreach($existingRedirect as $key => $value) {
          // TODO: Reuse existing redirects
          $value->delete();
        }
      }
      else {
        continue;
      }
    }

    /** @var Drupal\redirect\Entity\Redirect $redirect */
    $redirect = Redirect::create();
    $redirect->setSource($source_parts['path'], $source_parts['query']);
    $redirect->setRedirect($line[1]);
    $redirect->setStatusCode($line[2]);

    try {
      $redirect->save();
      $count++;
    }
    catch(Exception $e) {
      $messages[] = $e->getMessage();
    }

  }
  fclose($f);
  if ($count > 0) {
    $messages[] = t('@count row(s) imported.', array('@count' => $count));
    $success = TRUE;
  }
  return array('success' => $success, 'message' => $messages);
}